@inject SoftwareSurvey.Models.SurveyResponse _surveyResponse
@inject NavigationManager NavigationManager

<PreRenderLoadingMessage>
    <EnsureBeenThroughStart>
        @if (RequestDetails.IsTest)
        {
            <Router AppAssembly="@typeof(Program).Assembly">
                <Found Context="routeData">
                    <RouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
                </Found>
                <NotFound>
                    <LayoutView Layout="@typeof(MainLayout)">
                        <p>Sorry, there's nothing at this address.</p>
                        @{ Is404 = true; }
                    </LayoutView>
                </NotFound>
            </Router>
        }
        else
        {
            <h1 class="temporary-header">Survey closed</h1>

            <p>This survey is currently closed.  If you would like to participate in future surveys, please sign up to newsletter or listen to the podcasts</p>

            <hr />

            <NewsletterSignup />

            <hr />

            <PodcastAdvert />
        }
    </EnsureBeenThroughStart>
</PreRenderLoadingMessage>

@code {
    [Parameter]
    public SoftwareSurvey.Models.RequestDetails RequestDetails { get; set; }

    private bool Is404 { get; set; }

    protected override Task OnInitializedAsync()
    {
        _surveyResponse.IsTest = RequestDetails.IsTest;
        _surveyResponse.ConnectionIpAddress = RequestDetails.ConnectionIpAddress;
        _surveyResponse.ForwardedIpAddress = RequestDetails.ForwardedIpAddress;

        return base.OnInitializedAsync();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (Is404)
        {
            NavigationManager.NavigateTo("", true);
        }
    }
}